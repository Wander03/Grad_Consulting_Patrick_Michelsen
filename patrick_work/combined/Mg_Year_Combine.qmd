---
title: "Mg analysis"
format: html
editor: visual
---

## Packages

```{r}
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("agricolae")
#install.packages("plotrix")
#install.packages("rstatix")
#install.packages("ggpubr")
#install.packages("emmeans") 
#install.packages("multcomp")
library(multcomp)
library(emmeans)   
library(MASS)
library(lme4)
library(ggpubr)
library(rstatix)
library(plotrix)
library(tidyverse)
library(dbplyr)
library(agricolae)
```

**Read in Data**

```{r}
DF <-read.csv("Combined_Master.csv", header=T)
```

**Clean Data**

```{r}

DF <- DF[, !(names(DF) %in% c("X", "X.1","X.2","X.3","X.4","X.5"))]

DF$NH4[DF$NH4=="LOD"]<-0
DF$Nitrate[DF$Nitrate=="LOD"]<-0
DF$Mg[DF$Mg=="LOD"]<-0
DF$P[DF$P=="LOD"]<-0

DF$Nitrate[DF$Nitrate < 0] <- 0


```

```{r}

DF <- DF %>%
  mutate(id = row_number())

DF$NH4  <- as.numeric(DF$NH4)  
DF$Nitrate  <- as.numeric(DF$Nitrate)
DF$Mg  <- as.numeric(DF$Mg)  
DF$P  <- as.numeric(DF$P)
DF$EC  <- as.numeric(DF$EC)
DF$pH  <- as.numeric(DF$pH)

DF$Treatment  <- as.factor(DF$Treatment) 
DF$Block  <- as.factor(DF$Block) 
DF$Site  <- as.factor(DF$Site) 
DF$Study.Year  <- as.factor(DF$Study.Year)

DF$Date <- as.Date(DF$Date, format = "%m_%d_%Y")

DF$Date_Formatted <- format(DF$Date, "%m-%d-%Y")
```

Year by treatment Interaction to test if we can combine Years or not!

```{r}
library(lmerTest)
Yearmodel <- lmer(Mg ~ Treatment * Study.Year + (1 |Site:Block), data = DF)
anova(Yearmodel)

Sitemodel<- lmer(Mg ~ Treatment * Site + (1 |Site:Block), data = DF)
anova(Sitemodel)

```

```{}
```

```         

```

Linear Mixed Effects Model

```{r}
DF$Date_scaled <- scale(as.numeric(DF$Date))

Mg_model <- lmer(Mg ~ Treatment * Date_scaled * Site + (1 |Site:Block), data = DF)
anova(N_model, type = 3)

em <- emmeans::emmeans(Mg_model, pairwise ~ Treatment, adjust = "tukey")
cld(em$emmeans, adjust="tukey")

```

```{r}
library(ggplot2)

# Extract slope (trend) of EC over time (Date_scaled) for each Treatment
trend_estimates <- emtrends(N_model, ~ Treatment, var = "Date_scaled")
summary(trend_estimates)
emtrends(N_model, pairwise ~ Treatment, var = "Date_scaled")

ggplot(DF, aes(x = Date_scaled, y = Nitrate, color = Treatment)) +
  stat_smooth(method = "lm", se = FALSE) +
  facet_wrap(~ Site) +
  labs(title = "Nitrate Trends Over Time by Treatment and Site")
```

DATA ANALYSIS Mg

```{r}
df.summaryMg <- DF %>%
  group_by(Treatment, Date) %>%
  summarize(
    sd=sd(Mg, na.rm = TRUE),
    se=(sd/(sqrt(length(Mg)))),
    #se.1=std.error(Mg), 
    Mgmean = mean(Mg, na.rm = TRUE)
    )
df.summaryMg

Mg1<-lm(Mg~Treatment+Block+Site+Date+Study.Year,data=DF)
summary(Mg1)

Mg2<-aov(Mg1)
summary(Mg2)

tukey.testMg<-HSD.test(Mg2,trt="Treatment")
tukey.testMg


```

Data Visualization Mg

```{r}
ggplot(df.summaryMg, aes(Date, Mgmean, color = Treatment)) +
  geom_jitter(position = position_jitter(0.2)) + 
  geom_line(aes(group = Treatment),data = df.summaryMg) +
  geom_jitter(
    position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8)
  )+
  geom_errorbar(aes(ymin = Mgmean-se, ymax = Mgmean+se), data = df.summaryMg, width = 0.2)+
 
  theme(legend.position = "top")+
  ylab("Mg (mg/L)")




ggplot(df.summaryMg, aes(x = Treatment, y = Mgmean, fill = Treatment)) + 
  # Boxplot with customized whisker color
  geom_boxplot(
    outlier.shape = NA,   # Remove outliers from the plot
    whisker.col = "blue", # Set whisker color (adjust as needed)
    notch = FALSE         # Remove notches (optional)
  ) +
  labs(
    x = "Treatment",
    y = "Average Mg (mg/L)",
    fill = "Treatment"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))




```

Experiment with Repeated ANOVA

```{r}
model_scaledexp <- lmer(Mg ~ Treatment * Date_scaled * Study.Year + (Site|Block), data = DF)

summary(model_scaledexp)

#plot(model_scaled)


emm2 <- emmeans::emmeans(model_scaledexp, pairwise ~ Treatment, adjust = "tukey")

Mgpairs2 <- emm2$contrasts
print(Mgpairs2)

Mgpairs_summary <- summary(Mgpairs2)

Mgpairs_summary <- summary(Mgpairs2)

anova(model_scaledexp)

```

FLUX Analysis

```{r}
library("pracma")
DF$Time <- as.numeric(DF$Date- min(DF$Date)) 



df_integral <- DF %>%
  drop_na(Mg, Time) %>%
  group_by(Block,Treatment) %>%
  filter(n() >= 2) %>%
  group_modify(~ {
    tibble(
      Total_Mg= trapz(.x$Time, .x$Mg),
      Points_Used = nrow(.x)
    )
  })

library(lme4)
model <- lmer(Total_Mg ~ Treatment + (1|Block), data = df_integral)
anova(model)


ggplot(df_integral, aes(Treatment, Total_Mg)) +
  geom_boxplot(aes(fill = Treatment), width = 0.6, outlier.shape = NA) +
  geom_jitter(width = 0.1, alpha = 0.5) +
  labs(y = "Total Magnesium Flux (mg/L × days)",
       title = paste("Treatment Effects (F =", round(anova(model)$"F value"[1], 2), ")")) +
  theme_minimal()
```

FLUX stats analysis

```{r}
library(ggpubr)
library(rstatix)

df_integral <- data.frame(
  Treatment = df_integral$Treatment,  # Explicitly reference column
  Total_Mg = df_integral$Total_Mg,
  Block = df_integral$Block  # Include other columns as needed
)



# Parametric (t-tests with adjusted p-values)
pairwise_results <- df_integral %>%
  t_test(Total_Mg ~ Treatment, p.adjust.method = "BH") %>%
  add_xy_position(x = "Treatment")

# Non-parametric alternative (if needed)
wilcox_results <- df_integral %>%
  wilcox_test(Total_Mg ~ Treatment, p.adjust.method = "BH")

ggplot(df_integral, aes(Treatment, Total_Mg)) +
  geom_boxplot(aes(fill = Treatment), width = 0.6, show.legend = FALSE) +
  stat_pvalue_manual(
    pairwise_results,
    label = "p.adj", 
    tip.length = 0.01,
    step.increase = 0.1
  ) +
  labs(
    y = "Total Magnesium Flux (mg/L × days)",
    title = "Pairwise Treatment Comparisons"
  ) +
  theme_minimal()
```
